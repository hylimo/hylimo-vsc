{
    "scopeName": "source.hylimo",
    "patterns": [
        {
            "include": "#expression"
        }
    ],
    "repository": {
        "expression": {
            "patterns": [
                {
                    "begin": "((([!#%&'+\\-:;<=>?@\\^`|~]|\\*(?!/)|/(?![\\/*])|\\.{2,}|([_$](?![_$]*[a-zA-Z0-9])))+)|([a-zA-Z_$][a-zA-Z0-9_$]*)(?=[^\\S\\n]*[{(]))",
                    "beginCaptures": {
                        "0": {
                            "name": "entity.name.function"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expression.after"
                        }
                    ]
                },
                {
                    "begin": "(([!#%&'+\\-:;<=>?@\\^`|~]|\\*(?!/)|/(?![\\/*])|\\.{2,}|([_$](?![_$]*[a-zA-Z0-9])))+)|([a-zA-Z_$][a-zA-Z0-9_$]*)",
                    "beginCaptures": {
                        "0": {
                            "name": "variable"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expression.after"
                        }
                    ]
                },
                {
                    "begin": "[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?",
                    "beginCaptures": {
                        "0": {
                            "name": "constant.numeric"
                        }
                    },
                    "patterns": [{ "include": "#expression.after" }]
                },
                {
                    "begin": "\"(([^\"\\\\]|\\\\.)*)(\"|(?=\\n))",
                    "beginCaptures": {
                        "0": {
                            "name": "string"
                        }
                    },
                    "patterns": [{ "include": "#expression.after" }]
                },
                {
                    "begin": "[(\\[{,]",
                    "beginCaptures": {
                        "0": {
                            "name": "delimiter"
                        }
                    },
                    "patterns": [{ "include": "#expression" }]
                },
                {
                    "begin": "[)\\]}]",
                    "beginCaptures": {
                        "0": {
                            "name": "delimiter"
                        }
                    },
                    "patterns": [{ "include": "#expression.after" }]
                }
            ]
        },
        "expression.after": {
            "patterns": [
                {
                    "begin": "\\.(?!\\.)",
                    "beginCaptures": {
                        "0": {
                            "name": "delimiter.dot"
                        }
                    },
                    "patterns": [{ "include": "#expression.after.access" }]
                },
                {
                    "begin": "((([!#%&'+\\-:;<=>?@\\^`|~]|\\*(?!/)|/(?![\\/*])|\\.{2,}|([_$](?![_$]*[a-zA-Z0-9])))+)|([a-zA-Z_$][a-zA-Z0-9_$]*|\\.)+)",
                    "beginCaptures": {
                        "0": {
                            "name": "operator"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expression"
                        }
                    ]
                },
                {
                    "begin": "\\n",
                    "patterns": [
                        {
                            "include": "#expression"
                        }
                    ]
                },
                { "include": "#expression" }
            ]
        },
        "expression.after.access": {
            "patterns": [
                {
                    "begin": "((([!#%&'+\\-:;<=>?@\\^`|~]|\\*(?!/)|/(?![\\/*])|\\.{2,}|([_$](?![_$]*[a-zA-Z0-9])))+)|([a-zA-Z_$][a-zA-Z0-9_$]*)(?=[^\\S\\n]*[{(]))",
                    "beginCaptures": {
                        "0": {
                            "name": "entity.name.function"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expression.after"
                        }
                    ]
                },
                {
                    "begin": "(([!#%&'+\\-:;<=>?@\\^`|~]|\\*(?!/)|/(?![\\/*])|\\.{2,}|([_$](?![_$]*[a-zA-Z0-9])))+)|([a-zA-Z_$][a-zA-Z0-9_$]*)",
                    "beginCaptures": {
                        "0": {
                            "name": "variable.other.property"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expression.after"
                        }
                    ]
                },
                { "include": "#expression.after" }
            ]
        }
    }
}
